/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Presale, PresaleInterface } from "../Presale";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "investToken_",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "startTimestamp_",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "duration_",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "uint240",
            name: "hardcap",
            type: "uint240",
          },
          {
            internalType: "uint16",
            name: "price",
            type: "uint16",
          },
        ],
        internalType: "struct Presale.RoundInfo[]",
        name: "rounds_",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "HardcapAccomplished",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectStartTimestamp",
    type: "error",
  },
  {
    inputs: [],
    name: "PresaleNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroInvest",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroRounds",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "roundId",
        type: "uint8",
      },
    ],
    name: "Invested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint240",
            name: "hardcap",
            type: "uint240",
          },
          {
            internalType: "uint16",
            name: "price",
            type: "uint16",
          },
        ],
        internalType: "struct Presale.RoundInfo[]",
        name: "rounds_",
        type: "tuple[]",
      },
    ],
    name: "addRounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_",
        type: "address",
      },
    ],
    name: "getUserAllocations",
    outputs: [
      {
        internalType: "uint256[]",
        name: "allocations",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_",
        type: "address",
      },
    ],
    name: "getUserInvestmentInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "roundId",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "amount",
            type: "uint216",
          },
        ],
        internalType: "struct Presale.InvestInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "roundId_",
        type: "uint8",
      },
    ],
    name: "invest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "investTokenReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "roundTotalInvested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rounds",
    outputs: [
      {
        internalType: "uint240",
        name: "hardcap",
        type: "uint240",
      },
      {
        internalType: "uint16",
        name: "price",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
    ],
    name: "setReceiverWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalInvested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class Presale__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    investToken_: string,
    startTimestamp_: BigNumberish,
    duration_: BigNumberish,
    rounds_: { hardcap: BigNumberish; price: BigNumberish }[],
    receiver_: string,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Presale> {
    return super.deploy(
      investToken_,
      startTimestamp_,
      duration_,
      rounds_,
      receiver_,
      owner_,
      overrides || {}
    ) as Promise<Presale>;
  }
  getDeployTransaction(
    investToken_: string,
    startTimestamp_: BigNumberish,
    duration_: BigNumberish,
    rounds_: { hardcap: BigNumberish; price: BigNumberish }[],
    receiver_: string,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      investToken_,
      startTimestamp_,
      duration_,
      rounds_,
      receiver_,
      owner_,
      overrides || {}
    );
  }
  attach(address: string): Presale {
    return super.attach(address) as Presale;
  }
  connect(signer: Signer): Presale__factory {
    return super.connect(signer) as Presale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PresaleInterface {
    return new utils.Interface(_abi) as PresaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Presale {
    return new Contract(address, _abi, signerOrProvider) as Presale;
  }
}
