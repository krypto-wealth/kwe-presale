/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Staking, StakingInterface } from '../Staking'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'DENOMINATOR',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'apy',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'getUserStake',
    outputs: [
      {
        components: [
          {
            internalType: 'bool',
            name: 'isStaked',
            type: 'bool',
          },
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'reward',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'timestamp',
            type: 'uint256',
          },
        ],
        internalType: 'struct Staking.Stake',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'legitMaxId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'periods',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'reservedRewards',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardPool',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount_',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'stake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakedAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'token',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unstake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'users',
    outputs: [
      {
        internalType: 'bool',
        name: 'isStaked',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'reward',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x60e0604052601e6080908152603c60a052605a60c05262000025906001906003620000ae565b5060408051606081018252612ee08152613a986020820152614650918101919091526200005790600290600362000103565b503480156200006557600080fd5b5060405162000e1b38038062000e1b83398101604081905262000088916200015e565b600080546001600160a01b0319166001600160a01b039290921691909117905562000190565b828054828255906000526020600020908101928215620000f1579160200282015b82811115620000f1578251829060ff16905591602001919060010190620000cf565b50620000ff92915062000147565b5090565b828054828255906000526020600020908101928215620000f1579160200282015b82811115620000f1578251829061ffff1690559160200191906001019062000124565b5b80821115620000ff576000815560010162000148565b6000602082840312156200017157600080fd5b81516001600160a01b03811681146200018957600080fd5b9392505050565b610c7b80620001a06000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063af5ce10411610071578063af5ce1041461016e578063b5539a1f14610177578063bbadc93a1461017f578063e75ac809146101d6578063ea4a1104146101e9578063fc0c546a146101fc57600080fd5b80632def6620146100b9578063373d6132146100c357806366666aa9146100df5780637b0472f0146100e7578063918f8674146100fa578063a87430ba14610103575b600080fd5b6100c1610227565b005b6100cc60035481565b6040519081526020015b60405180910390f35b6100cc6103b9565b6100c16100f5366004610a9b565b61044a565b6100cc61271081565b610144610111366004610abd565b6005602052600090815260409020805460018201546002830154600384015460049094015460ff90931693919290919085565b6040805195151586526020860194909452928401919091526060830152608082015260a0016100d6565b6100cc60045481565b6001546100cc565b61019261018d366004610abd565b610632565b6040516100d69190600060a0820190508251151582526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b6100cc6101e4366004610aed565b6106c3565b6100cc6101f7366004610aed565b6106e4565b60005461020f906001600160a01b031681565b6040516001600160a01b0390911681526020016100d6565b3360009081526005602052604090205460ff166102815760405162461bcd60e51b815260206004820152601360248201527214dd185ada5b99ce881b9bdd081cdd185ad959606a1b60448201526064015b60405180910390fd5b33600090815260056020526040902060019081015481544292919081106102aa576102aa610b06565b600091825260208083209091015433835260059091526040909120600401546102d39190610b32565b106103155760405162461bcd60e51b81526020600482015260126024820152715374616b696e673a206e6f7420726561647960701b6044820152606401610278565b33600090815260056020526040812060038082015460029092015481549293909283929190610345908490610b4b565b92505081905550816004600082825461035e9190610b4b565b909155506103859050336103728484610b32565b6000546001600160a01b031691906106f4565b5050336000908152600560205260408120805460ff1916815560018101829055600281018290556003810182905560040155565b60048054600354600080546040516370a0823160e01b8152309581019590955290936001600160a01b03909116906370a0823190602401602060405180830381865afa15801561040d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104319190610b5e565b61043b9190610b4b565b6104459190610b4b565b905090565b60015481106104915760405162461bcd60e51b815260206004820152601360248201527214dd185ada5b99ce881a5b9d985b1a59081a59606a1b6044820152606401610278565b3360009081526005602052604090205460ff16156104f15760405162461bcd60e51b815260206004820152601760248201527f5374616b696e673a20616c7265616479207374616b65640000000000000000006044820152606401610278565b60006104fc8361075c565b90506000816127106002858154811061051757610517610b06565b90600052602060002001548461052d9190610b77565b6105379190610b8e565b6105419190610b4b565b90508061054c6103b9565b101561059a5760405162461bcd60e51b815260206004820152601b60248201527f5374616b696e673a206e6f7420656e6f756768207265776172647300000000006044820152606401610278565b81600360008282546105ac9190610b32565b9250508190555080600460008282546105c59190610b32565b90915550506040805160a0810182526001808252602080830196875282840195865260608301948552426080840190815233600090815260059092529390209151825460ff1916901515178255945194810194909455915160028401555160038301555160049091015550565b6106666040518060a00160405280600015158152602001600081526020016000815260200160008152602001600081525090565b506001600160a01b0316600090815260056020908152604091829020825160a081018452815460ff161515815260018201549281019290925260028101549282019290925260038201546060820152600490910154608082015290565b600281815481106106d357600080fd5b600091825260209091200154905081565b600181815481106106d357600080fd5b6040516001600160a01b03831660248201526044810182905261075790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610865565b505050565b600080546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190610b5e565b6000549091506107e4906001600160a01b031633308661093a565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561082d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108519190610b5e565b905061085d8282610b4b565b949350505050565b60006108ba826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109789092919063ffffffff16565b90508051600014806108db5750808060200190518101906108db9190610bb0565b6107575760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610278565b6040516001600160a01b03808516602483015283166044820152606481018290526109729085906323b872dd60e01b90608401610720565b50505050565b606061085d848460008585600080866001600160a01b0316858760405161099f9190610bf6565b60006040518083038185875af1925050503d80600081146109dc576040519150601f19603f3d011682016040523d82523d6000602084013e6109e1565b606091505b50915091506109f2878383876109fd565b979650505050505050565b60608315610a6c578251600003610a65576001600160a01b0385163b610a655760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610278565b508161085d565b61085d8383815115610a815781518083602001fd5b8060405162461bcd60e51b81526004016102789190610c12565b60008060408385031215610aae57600080fd5b50508035926020909101359150565b600060208284031215610acf57600080fd5b81356001600160a01b0381168114610ae657600080fd5b9392505050565b600060208284031215610aff57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610b4557610b45610b1c565b92915050565b81810381811115610b4557610b45610b1c565b600060208284031215610b7057600080fd5b5051919050565b8082028115828204841417610b4557610b45610b1c565b600082610bab57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610bc257600080fd5b81518015158114610ae657600080fd5b60005b83811015610bed578181015183820152602001610bd5565b50506000910152565b60008251610c08818460208701610bd2565b9190910192915050565b6020815260008251806020840152610c31816040850160208701610bd2565b601f01601f1916919091016040019291505056fea2646970667358221220c516c5f364e504c2200128361ddf8b80872cbda172ba1cb8b9f04842e056d3fd64736f6c63430008120033'

export class Staking__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(_token, overrides || {}) as Promise<Staking>
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {})
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking
  }
}
